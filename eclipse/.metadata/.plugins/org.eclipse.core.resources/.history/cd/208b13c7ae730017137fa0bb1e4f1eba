package xiroc.doomcall.block;

import cpw.mods.fml.common.registry.GameRegistry;
import doom.lib.block.BlockPos;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.world.World;
import net.minecraftforge.oredict.ShapedOreRecipe;
import xiroc.doomcall.item.ModItems;
import xiroc.doomcall.lib.Names;

public class BlockHandler {
	
	public static Block CABLE_POWER_COPPER;
	
	public static Block item_crate = new BlockItemCrate() = new BlockCopperPowerCable();
	public static Block item_crate_reinforced = new BlockItemCrateReinforced();
	public static Block heavy_coal_generator = new BlockHeavyCoalGenerator();
	public static Block hv_generator = new BlockHVGenerator(Material.iron);
	public static Block machine_part = new BlockMachinePart(Material.iron);
	public static Block energetic_mass_fabricator = new BlockEnergeticMassFabricator(Material.iron);
	public static Block resource_generator = new BlockResourceGenerator();
	public static Block coolingCoilCopper = new BlockCoolingCoilCopper();
	
	public static final int machine_energetic_mass_fabricator = 1;
	
	public static void registerBlocks(){
		GameRegistry.registerBlock(CABLE_POWER_COPPER, ItemBlockStandardMetadata.class, Names.CABLE_POWER_COPPER);		
		GameRegistry.registerBlock(item_crate, "crate");
		GameRegistry.registerBlock(item_crate_reinforced, "crate_reinforced");
		GameRegistry.registerBlock(heavy_coal_generator, ModItems.item_hcg.getClass(), "generator_coal_heavy");
		GameRegistry.registerBlock(hv_generator, "hv_generator");
		GameRegistry.registerBlock(machine_part, "machine_part");
		GameRegistry.registerBlock(energetic_mass_fabricator, "energetic_mass_fabricator");
		GameRegistry.registerBlock(resource_generator, "resource_generator");
	}
	
	public static BlockPos getCoreBlock(Block core, Block side, World world, int x, int y, int z){
		for(int k =-1;k<2;k++){
			for(int b = -1;b<2;b++){
				for(int l = -1;l<2;l++){
					if(world.getBlock(x+k, y+b, z+l) == core) return new BlockPos(world, x+k, y+b, z+l);
				}
			}
		}
		return null;
	}
	
	public static boolean isDefaultMultiblockStructure(Block core, Block side, World world, int x, int y, int z){
		boolean flag = true;
		if(world.getBlock(x, y, z) == core){
			for(int k =-1;k<2;k++){
				for(int b = -1;b<2;b++){
					for(int l = -1;l<2;l++){
						if(world.getBlock(x+k, y+b, z+l) != side && world.getBlock(x+k, y+b, z+l) != core) flag = false;
					}
				}
			}
		}
		return flag;
	}
	
	public static String getMachineNameByID(int id){
		switch(id){
		case 0:
			return "machinePart";
		case machine_energetic_mass_fabricator:
			return "energeticMassFabricator";
		}
		return null;
	}

}
